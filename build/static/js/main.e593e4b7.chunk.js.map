{"version":3,"sources":["util.js","components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","serviceWorker.js","index.js"],"names":["playAudio","isPlaying","audioRef","playPromise","current","play","undefined","then","audio","catch","error","console","log","Player","setIsPlaying","songInfo","setSongInfo","currentSong","songs","setCurrentSong","setSongs","useState","activeVolume","setActiveVolume","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","trackAnim","transform","animationPercentage","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","className","currentTime","style","background","color","value","type","max","duration","min","onChange","e","target","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","faVolumeDown","volume","step","Song","src","cover","alt","name","artist","LibrarySong","selectedSong","filter","state","Library","libraryStatus","key","Nav","setLibraryStatus","faMusic","chillHop","uuidv4","App","useRef","chillhop","timeUpdateHandler","roundedCurrent","round","roundedDuration","percentage","songEndHandler","onLoadedMetadata","onTimeUpdate","ref","onEnded","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e593e4b7.chunk.js","sourcesContent":["export const playAudio = (isPlaying, audioRef) => {\r\n  if (isPlaying) {\r\n    const playPromise = audioRef.current.play();\r\n    if (playPromise !== undefined) {\r\n      playPromise\r\n        .then((audio) => {\r\n          audioRef.current.play();\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n  faVolumeDown,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { playAudio } from \"../util\";\r\n\r\nconst Player = ({\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  songInfo,\r\n  setSongInfo,\r\n  currentSong,\r\n  songs,\r\n  setCurrentSong,\r\n  setSongs,\r\n}) => {\r\n  const [activeVolume, setActiveVolume] = useState(false);\r\n  //UseEffect Update List\r\n  const activeLibraryHandler = (nextPrev) => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === nextPrev.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n\r\n    setSongs(newSongs);\r\n  };\r\n\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n  //Event Handlers\r\n  function getTime(time) {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  }\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n\r\n    //Forward BAck\r\n    if (direction === \"skip-forward\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (direction === \"skip-back\") {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        activeLibraryHandler(songs[songs.length - 1]);\r\n        playAudio(isPlaying, audioRef);\r\n        return;\r\n      }\r\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n  const changeVolume = (e) => {\r\n    let value = e.target.value;\r\n    audioRef.current.volume = value;\r\n    setSongInfo({ ...songInfo, volume: value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            value={songInfo.currentTime}\r\n            type=\"range\"\r\n            max={songInfo.duration || 0}\r\n            min={0}\r\n            onChange={dragHandler}\r\n          />\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n          onClick={() => skipTrackHandler(\"skip-forward\")}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => setActiveVolume(!activeVolume)}\r\n          icon={faVolumeDown}\r\n        />\r\n        {activeVolume && (\r\n          <input\r\n            onChange={changeVolume}\r\n            value={songInfo.volume}\r\n            max=\"1\"\r\n            min=\"0\"\r\n            step=\"0.01\"\r\n            type=\"range\"\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\nconst Song = ({ currentSong, isPlaying }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img\r\n        className={isPlaying ? \"rotateSong\" : \"\"}\r\n        src={currentSong.cover}\r\n        alt=\"\"\r\n      />\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import React from \"react\";\r\nimport { playAudio } from \"../util\";\r\n\r\nconst LibrarySong = ({\r\n  name,\r\n  artist,\r\n  cover,\r\n  id,\r\n  setCurrentSong,\r\n  songs,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  active,\r\n}) => {\r\n  const songSelectHandler = () => {\r\n    const selectedSong = songs.filter((state) => state.id === id);\r\n    setCurrentSong({ ...selectedSong[0] });\r\n    //Set Active in library\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n\r\n    //Play audio\r\n    playAudio(isPlaying, audioRef);\r\n  };\r\n  return (\r\n    <div\r\n      onClick={songSelectHandler}\r\n      className={`library-song ${active ? \"selected\" : \"\"}`}\r\n    >\r\n      <img src={cover} alt=\"\" />\r\n      <div className=\"song-description\">\r\n        <h3>{name}</h3>\r\n        <h4>{artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\n\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  libraryStatus,\r\n}) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? \"active-library\" : \" \"}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            songs={songs}\r\n            cover={song.cover}\r\n            name={song.name}\r\n            artist={song.artist}\r\n            active={song.active}\r\n            key={song.id}\r\n            id={song.id}\r\n            setCurrentSong={setCurrentSong}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\r\n  const openLibraryHandler = () => {\r\n    setLibraryStatus(!libraryStatus);\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <h1>neonMusic</h1>\r\n      <button\r\n        className={libraryStatus ? \"library-active\" : \"\"}\r\n        onClick={openLibraryHandler}\r\n      >\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic}></FontAwesomeIcon>\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    //ADD MORE HERE\r\n  ];\r\n}\r\n\r\nexport default chillHop;\r\n","import React, { useState, useRef } from \"react\";\r\nimport \"./styles/app.scss\";\r\n//Import Components\r\nimport Player from \"./components/Player\";\r\nimport Song from \"./components/Song\";\r\nimport Library from \"./components/Library\";\r\nimport Nav from \"./components/Nav\";\r\n//Import data\r\nimport chillhop from \"./data\";\r\n//Util\r\nimport { playAudio } from \"./util\";\r\n\r\nfunction App() {\r\n  //Ref\r\n  const audioRef = useRef(null);\r\n\r\n  const [songs, setSongs] = useState(chillhop());\r\n  const [currentSong, setCurrentSong] = useState(songs[0]);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [songInfo, setSongInfo] = useState({\r\n    currentTime: 0,\r\n    duration: 0,\r\n    animationPercentage: 0,\r\n    volume: 0,\r\n  });\r\n  const [libraryStatus, setLibraryStatus] = useState(false);\r\n\r\n  const timeUpdateHandler = (e) => {\r\n    const current = e.target.currentTime;\r\n    const duration = e.target.duration;\r\n\r\n    const roundedCurrent = Math.round(current);\r\n    const roundedDuration = Math.round(duration);\r\n    const percentage = Math.round((roundedCurrent / roundedDuration) * 100);\r\n    setSongInfo({\r\n      ...songInfo,\r\n      currentTime: current,\r\n      duration: duration,\r\n      animationPercentage: percentage,\r\n      volume: e.target.volume,\r\n    });\r\n  };\r\n  const songEndHandler = async () => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    playAudio(isPlaying, audioRef);\r\n    return;\r\n  };\r\n  return (\r\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\r\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\r\n      <Song isPlaying={isPlaying} currentSong={currentSong} />\r\n      <Player\r\n        audioRef={audioRef}\r\n        setIsPlaying={setIsPlaying}\r\n        currentSong={currentSong}\r\n        isPlaying={isPlaying}\r\n        songInfo={songInfo}\r\n        setSongInfo={setSongInfo}\r\n        songs={songs}\r\n        setSongs={setSongs}\r\n        setCurrentSong={setCurrentSong}\r\n      />\r\n      <Library\r\n        songs={songs}\r\n        setCurrentSong={setCurrentSong}\r\n        audioRef={audioRef}\r\n        isPlaying={isPlaying}\r\n        setSongs={setSongs}\r\n        libraryStatus={libraryStatus}\r\n      />\r\n      <audio\r\n        onLoadedMetadata={timeUpdateHandler}\r\n        onTimeUpdate={timeUpdateHandler}\r\n        ref={audioRef}\r\n        src={currentSong.audio}\r\n        onEnded={songEndHandler}\r\n       \r\n      ></audio>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}